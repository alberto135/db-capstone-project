-- MySQL Script generated by MySQL Workbench
-- Thu Nov  9 19:42:13 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema LittleLemonDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema LittleLemonDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `LittleLemonDB` DEFAULT CHARACTER SET utf8 ;
USE `LittleLemonDB` ;

-- -----------------------------------------------------
-- Table `LittleLemonDB`.`Booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LittleLemonDB`.`Booking` (
  `Booking_ID` INT NOT NULL,
  `Date` DATE NULL,
  `Table_number` INT NOT NULL,
  PRIMARY KEY (`Booking_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LittleLemonDB`.`Menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LittleLemonDB`.`Menu` (
  `Item_ID` INT NOT NULL,
  `Price` INT NULL,
  `Type` VARCHAR(45) NULL,
  PRIMARY KEY (`Item_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LittleLemonDB`.`Order_delivery_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LittleLemonDB`.`Order_delivery_status` (
  `OrderDeliveryStatus_ID` VARCHAR(45) NOT NULL,
  `Order_date` VARCHAR(45) NULL,
  `OrderDeliveryStatus` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`OrderDeliveryStatus_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LittleLemonDB`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LittleLemonDB`.`Orders` (
  `Order_ID` INT NOT NULL,
  `Order_Quantity` INT NOT NULL,
  `Order_TottalCost` INT NOT NULL,
  `Order_delivery_status_OrderDeliveryStatus_ID` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Order_ID`, `Order_delivery_status_OrderDeliveryStatus_ID`),
  INDEX `fk_Orders_Order_delivery_status_idx` (`Order_delivery_status_OrderDeliveryStatus_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Orders_Order_delivery_status`
    FOREIGN KEY (`Order_delivery_status_OrderDeliveryStatus_ID`)
    REFERENCES `LittleLemonDB`.`Order_delivery_status` (`OrderDeliveryStatus_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LittleLemonDB`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LittleLemonDB`.`Customer` (
  `ID` INT NOT NULL,
  `FullName` VARCHAR(45) NULL,
  `Email` VARCHAR(45) NULL,
  `Booking_Booking_ID` INT NOT NULL,
  `Phone_number` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`, `Booking_Booking_ID`),
  INDEX `fk_Customer_Booking1_idx` (`Booking_Booking_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Customer_Booking1`
    FOREIGN KEY (`Booking_Booking_ID`)
    REFERENCES `LittleLemonDB`.`Booking` (`Booking_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LittleLemonDB`.`Menu_has_Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LittleLemonDB`.`Menu_has_Orders` (
  `Menu_Item_ID` INT NOT NULL,
  `Orders_Order_ID` INT NOT NULL,
  `Orders_Order_delivery_status_OrderDeliveryStatus_ID` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Menu_Item_ID`, `Orders_Order_ID`, `Orders_Order_delivery_status_OrderDeliveryStatus_ID`),
  INDEX `fk_Menu_has_Orders_Orders1_idx` (`Orders_Order_ID` ASC, `Orders_Order_delivery_status_OrderDeliveryStatus_ID` ASC) VISIBLE,
  INDEX `fk_Menu_has_Orders_Menu1_idx` (`Menu_Item_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Menu_has_Orders_Menu1`
    FOREIGN KEY (`Menu_Item_ID`)
    REFERENCES `LittleLemonDB`.`Menu` (`Item_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Menu_has_Orders_Orders1`
    FOREIGN KEY (`Orders_Order_ID` , `Orders_Order_delivery_status_OrderDeliveryStatus_ID`)
    REFERENCES `LittleLemonDB`.`Orders` (`Order_ID` , `Order_delivery_status_OrderDeliveryStatus_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LittleLemonDB`.`Customer_has_Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LittleLemonDB`.`Customer_has_Orders` (
  `Customer_ID` INT NOT NULL,
  `Orders_Order_ID` INT NOT NULL,
  `Orders_Order_delivery_status_OrderDeliveryStatus_ID` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Customer_ID`, `Orders_Order_ID`, `Orders_Order_delivery_status_OrderDeliveryStatus_ID`),
  INDEX `fk_Customer_has_Orders_Orders1_idx` (`Orders_Order_ID` ASC, `Orders_Order_delivery_status_OrderDeliveryStatus_ID` ASC) VISIBLE,
  INDEX `fk_Customer_has_Orders_Customer1_idx` (`Customer_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Customer_has_Orders_Customer1`
    FOREIGN KEY (`Customer_ID`)
    REFERENCES `LittleLemonDB`.`Customer` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customer_has_Orders_Orders1`
    FOREIGN KEY (`Orders_Order_ID` , `Orders_Order_delivery_status_OrderDeliveryStatus_ID`)
    REFERENCES `LittleLemonDB`.`Orders` (`Order_ID` , `Order_delivery_status_OrderDeliveryStatus_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LittleLemonDB`.`Staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LittleLemonDB`.`Staff` (
  `Staff_ID` INT NOT NULL,
  `Tittle` VARCHAR(45) NOT NULL,
  `Salary` INT NOT NULL,
  PRIMARY KEY (`Staff_ID`),
  UNIQUE INDEX `Staff_ID_UNIQUE` (`Staff_ID` ASC) VISIBLE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
